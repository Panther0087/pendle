/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { IPendleYieldContractDeployerV2 } from "../IPendleYieldContractDeployerV2";

export class IPendleYieldContractDeployerV2__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPendleYieldContractDeployerV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IPendleYieldContractDeployerV2;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "yieldToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "container",
        type: "uint256[]",
      },
    ],
    name: "deployYieldTokenHolder",
    outputs: [
      {
        internalType: "address",
        name: "yieldTokenHolder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlyingAsset",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    name: "forgeFutureYieldToken",
    outputs: [
      {
        internalType: "address",
        name: "xyt",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "forgeId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlyingAsset",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    name: "forgeOwnershipToken",
    outputs: [
      {
        internalType: "address",
        name: "ot",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];
