/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockPendleLpHolder } from "../MockPendleLpHolder";

export class MockPendleLpHolder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governanceManager: string,
    _pendleMarket: string,
    _router: string,
    _underlyingYieldToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPendleLpHolder> {
    return super.deploy(
      _governanceManager,
      _pendleMarket,
      _router,
      _underlyingYieldToken,
      overrides || {}
    ) as Promise<MockPendleLpHolder>;
  }
  getDeployTransaction(
    _governanceManager: string,
    _pendleMarket: string,
    _router: string,
    _underlyingYieldToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governanceManager,
      _pendleMarket,
      _router,
      _underlyingYieldToken,
      overrides || {}
    );
  }
  attach(address: string): MockPendleLpHolder {
    return super.attach(address) as MockPendleLpHolder;
  }
  connect(signer: Signer): MockPendleLpHolder__factory {
    return super.connect(signer) as MockPendleLpHolder__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPendleLpHolder {
    return new Contract(address, _abi, signerOrProvider) as MockPendleLpHolder;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governanceManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pendleMarket",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingYieldToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sendTo",
        type: "address",
      },
    ],
    name: "EtherWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sendTo",
        type: "address",
      },
    ],
    name: "TokenWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "allowedToWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceManager",
    outputs: [
      {
        internalType: "contract PendleGovernanceManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendleMarket",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemLpInterests",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendInterests",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendLp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "setUpEmergencyMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingYieldToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "sendTo",
        type: "address",
      },
    ],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sendTo",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61012060405234801561001157600080fd5b5060405161101d38038061101d8339818101604052608081101561003457600080fd5b508051602082015160408301516060909301519192909183838383836001600160a01b03811661009a576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b60008054336001600160a01b031990911617905560601b6001600160601b0319166080526001600160a01b038316158015906100de57506001600160a01b03821615155b80156100f257506001600160a01b03811615155b610132576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6001600160601b0319606093841b811660e05291831b82166101005233831b60a05290911b1660c052505050505060805160601c60a05160601c60c05160601c60e05160601c6101005160601c610e386101e56000398061044052508061046f528061050a52806105ae52806107cc528061088152508061028e5280610796528061081e528061084452508061021752806103d45280610537528061071f5250806107fa52806109165250610e386000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063cd800df711610066578063cd800df71461016d578063ce56c45414610199578063d02fba51146101c5578063d2e6d1c3146101eb578063ddf0fa83146101f35761009e565b80632d291cad146100a35780633bb7fab0146100dd5780633ccdbb281461010b578063838dd2891461014157806399d9a71f14610149575b600080fd5b6100c9600480360360208110156100b957600080fd5b50356001600160a01b03166101fb565b604080519115158252519081900360200190f35b610109600480360360408110156100f357600080fd5b506001600160a01b03813516906020013561020c565b005b6101096004803603606081101561012157600080fd5b506001600160a01b038135811691602081013591604090910135166102b9565b6101096103c9565b610151610508565b604080516001600160a01b039092168252519081900360200190f35b6101096004803603604081101561018357600080fd5b506001600160a01b03813516906020013561052c565b610109600480360360408110156101af57600080fd5b50803590602001356001600160a01b03166105d5565b610109600480360360208110156101db57600080fd5b50356001600160a01b0316610714565b6101516107f8565b61015161081c565b600061020682610840565b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610281576040805162461bcd60e51b81526020600482015260156024820152744f4e4c595f4c49515549444954595f4d494e494e4760581b604482015290519081900360640190fd5b6102b56001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836108bb565b5050565b6102c1610912565b6001600160a01b0316336001600160a01b031614610318576040805162461bcd60e51b815260206004820152600f60248201526e4f4e4c595f474f5645524e414e434560881b604482015290519081900360640190fd5b61032183610840565b610366576040805162461bcd60e51b81526020600482015260116024820152701513d2d15397d393d517d0531313d5d151607a1b604482015290519081900360640190fd5b61037a6001600160a01b03841682846108bb565b604080516001600160a01b0380861682526020820185905283168183015290517f72cb8a894ddb372ceec3d2a7648d86f17d5a15caae0e986c53109b8a9a9385e69181900360600190a1505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461043e576040805162461bcd60e51b81526020600482015260156024820152744f4e4c595f4c49515549444954595f4d494e494e4760581b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166356c132cf7f0000000000000000000000000000000000000000000000000000000000000000306040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b0316815260200192505050602060405180830381600087803b1580156104de57600080fd5b505af11580156104f2573d6000803e3d6000fd5b505050506040513d60208110156102b557600080fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105a1576040805162461bcd60e51b81526020600482015260156024820152744f4e4c595f4c49515549444954595f4d494e494e4760581b604482015290519081900360640190fd5b6102b56001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836108bb565b6105dd610912565b6001600160a01b0316336001600160a01b031614610634576040805162461bcd60e51b815260206004820152600f60248201526e4f4e4c595f474f5645524e414e434560881b604482015290519081900360640190fd5b6040516000906001600160a01b0383169084908381818185875af1925050503d806000811461067f576040519150601f19603f3d011682016040523d82523d6000602084013e610684565b606091505b50509050806106cc576040805162461bcd60e51b815260206004820152600f60248201526e15d2551211149055d7d19052531151608a1b604482015290519081900360640190fd5b604080518481526001600160a01b038416602082015281517fec47e7ed86c86774d1a72c19f35c639911393fe7c1a34031fdbd260890da90de929181900390910190a1505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610789576040805162461bcd60e51b81526020600482015260156024820152744f4e4c595f4c49515549444954595f4d494e494e4760581b604482015290519081900360640190fd5b6107bf6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168260001961099e565b6107f56001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168260001961099e565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415801561020657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141592915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261090d908490610aad565b505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561096d57600080fd5b505afa158015610981573d6000803e3d6000fd5b505050506040513d602081101561099757600080fd5b5051905090565b801580610a24575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b1580156109f657600080fd5b505afa158015610a0a573d6000803e3d6000fd5b505050506040513d6020811015610a2057600080fd5b5051155b610a5f5760405162461bcd60e51b8152600401808060200182810382526036815260200180610dcd6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261090d9084905b6000610b02826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b5e9092919063ffffffff16565b80519091501561090d57808060200190516020811015610b2157600080fd5b505161090d5760405162461bcd60e51b815260040180806020018281038252602a815260200180610da3602a913960400191505060405180910390fd5b6060610b6d8484600085610b77565b90505b9392505050565b606082471015610bb85760405162461bcd60e51b8152600401808060200182810382526026815260200180610d7d6026913960400191505060405180910390fd5b610bc185610cd2565b610c12576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310610c505780518252601f199092019160209182019101610c31565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610cb2576040519150601f19603f3d011682016040523d82523d6000602084013e610cb7565b606091505b5091509150610cc7828286610cd8565b979650505050505050565b3b151590565b60608315610ce7575081610b70565b825115610cf75782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d41578181015183820152602001610d29565b50505050905090810190601f168015610d6e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a264697066735822122064e4c227a041fcb7209955e3692d7ac6535e2a80df298bb7a4bbf893766dcd0c64736f6c63430007060033";
