/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface PendleMarketReaderInterface extends ethers.utils.Interface {
  functions: {
    "data()": FunctionFragment;
    "getMarketRateExactIn(address,address,uint256,bytes32)": FunctionFragment;
    "getMarketRateExactOut(address,address,uint256,bytes32)": FunctionFragment;
    "getMarketReserves(bytes32,address,address)": FunctionFragment;
    "getMarketTokenAddresses(address)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "data", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getMarketRateExactIn",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getMarketRateExactOut",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getMarketReserves",
    values: [BytesLike, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getMarketTokenAddresses",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "data", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getMarketRateExactIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMarketRateExactOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMarketReserves",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMarketTokenAddresses",
    data: BytesLike
  ): Result;

  events: {};
}

export class PendleMarketReader extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: PendleMarketReaderInterface;

  functions: {
    data(overrides?: CallOverrides): Promise<[string]>;

    "data()"(overrides?: CallOverrides): Promise<[string]>;

    getMarketRateExactIn(
      _tokenIn: string,
      _tokenOut: string,
      _inSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber] & { market: string; outSwapAmount: BigNumber }
    >;

    "getMarketRateExactIn(address,address,uint256,bytes32)"(
      _tokenIn: string,
      _tokenOut: string,
      _inSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber] & { market: string; outSwapAmount: BigNumber }
    >;

    getMarketRateExactOut(
      _tokenIn: string,
      _tokenOut: string,
      _outSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber] & { market: string; inSwapAmount: BigNumber }
    >;

    "getMarketRateExactOut(address,address,uint256,bytes32)"(
      _tokenIn: string,
      _tokenOut: string,
      _outSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber] & { market: string; inSwapAmount: BigNumber }
    >;

    getMarketReserves(
      _marketFactoryId: BytesLike,
      _xyt: string,
      _token: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        xytBalance: BigNumber;
        tokenBalance: BigNumber;
        lastUpdatedBlock: BigNumber;
      }
    >;

    "getMarketReserves(bytes32,address,address)"(
      _marketFactoryId: BytesLike,
      _xyt: string,
      _token: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        xytBalance: BigNumber;
        tokenBalance: BigNumber;
        lastUpdatedBlock: BigNumber;
      }
    >;

    getMarketTokenAddresses(
      _market: string,
      overrides?: CallOverrides
    ): Promise<[string, string] & { token: string; xyt: string }>;

    "getMarketTokenAddresses(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<[string, string] & { token: string; xyt: string }>;
  };

  data(overrides?: CallOverrides): Promise<string>;

  "data()"(overrides?: CallOverrides): Promise<string>;

  getMarketRateExactIn(
    _tokenIn: string,
    _tokenOut: string,
    _inSwapAmount: BigNumberish,
    _marketFactoryId: BytesLike,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber] & { market: string; outSwapAmount: BigNumber }
  >;

  "getMarketRateExactIn(address,address,uint256,bytes32)"(
    _tokenIn: string,
    _tokenOut: string,
    _inSwapAmount: BigNumberish,
    _marketFactoryId: BytesLike,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber] & { market: string; outSwapAmount: BigNumber }
  >;

  getMarketRateExactOut(
    _tokenIn: string,
    _tokenOut: string,
    _outSwapAmount: BigNumberish,
    _marketFactoryId: BytesLike,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { market: string; inSwapAmount: BigNumber }>;

  "getMarketRateExactOut(address,address,uint256,bytes32)"(
    _tokenIn: string,
    _tokenOut: string,
    _outSwapAmount: BigNumberish,
    _marketFactoryId: BytesLike,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { market: string; inSwapAmount: BigNumber }>;

  getMarketReserves(
    _marketFactoryId: BytesLike,
    _xyt: string,
    _token: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      xytBalance: BigNumber;
      tokenBalance: BigNumber;
      lastUpdatedBlock: BigNumber;
    }
  >;

  "getMarketReserves(bytes32,address,address)"(
    _marketFactoryId: BytesLike,
    _xyt: string,
    _token: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      xytBalance: BigNumber;
      tokenBalance: BigNumber;
      lastUpdatedBlock: BigNumber;
    }
  >;

  getMarketTokenAddresses(
    _market: string,
    overrides?: CallOverrides
  ): Promise<[string, string] & { token: string; xyt: string }>;

  "getMarketTokenAddresses(address)"(
    _market: string,
    overrides?: CallOverrides
  ): Promise<[string, string] & { token: string; xyt: string }>;

  callStatic: {
    data(overrides?: CallOverrides): Promise<string>;

    "data()"(overrides?: CallOverrides): Promise<string>;

    getMarketRateExactIn(
      _tokenIn: string,
      _tokenOut: string,
      _inSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber] & { market: string; outSwapAmount: BigNumber }
    >;

    "getMarketRateExactIn(address,address,uint256,bytes32)"(
      _tokenIn: string,
      _tokenOut: string,
      _inSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber] & { market: string; outSwapAmount: BigNumber }
    >;

    getMarketRateExactOut(
      _tokenIn: string,
      _tokenOut: string,
      _outSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber] & { market: string; inSwapAmount: BigNumber }
    >;

    "getMarketRateExactOut(address,address,uint256,bytes32)"(
      _tokenIn: string,
      _tokenOut: string,
      _outSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber] & { market: string; inSwapAmount: BigNumber }
    >;

    getMarketReserves(
      _marketFactoryId: BytesLike,
      _xyt: string,
      _token: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        xytBalance: BigNumber;
        tokenBalance: BigNumber;
        lastUpdatedBlock: BigNumber;
      }
    >;

    "getMarketReserves(bytes32,address,address)"(
      _marketFactoryId: BytesLike,
      _xyt: string,
      _token: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        xytBalance: BigNumber;
        tokenBalance: BigNumber;
        lastUpdatedBlock: BigNumber;
      }
    >;

    getMarketTokenAddresses(
      _market: string,
      overrides?: CallOverrides
    ): Promise<[string, string] & { token: string; xyt: string }>;

    "getMarketTokenAddresses(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<[string, string] & { token: string; xyt: string }>;
  };

  filters: {};

  estimateGas: {
    data(overrides?: CallOverrides): Promise<BigNumber>;

    "data()"(overrides?: CallOverrides): Promise<BigNumber>;

    getMarketRateExactIn(
      _tokenIn: string,
      _tokenOut: string,
      _inSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMarketRateExactIn(address,address,uint256,bytes32)"(
      _tokenIn: string,
      _tokenOut: string,
      _inSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMarketRateExactOut(
      _tokenIn: string,
      _tokenOut: string,
      _outSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMarketRateExactOut(address,address,uint256,bytes32)"(
      _tokenIn: string,
      _tokenOut: string,
      _outSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMarketReserves(
      _marketFactoryId: BytesLike,
      _xyt: string,
      _token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMarketReserves(bytes32,address,address)"(
      _marketFactoryId: BytesLike,
      _xyt: string,
      _token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMarketTokenAddresses(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMarketTokenAddresses(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    data(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "data()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getMarketRateExactIn(
      _tokenIn: string,
      _tokenOut: string,
      _inSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMarketRateExactIn(address,address,uint256,bytes32)"(
      _tokenIn: string,
      _tokenOut: string,
      _inSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMarketRateExactOut(
      _tokenIn: string,
      _tokenOut: string,
      _outSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMarketRateExactOut(address,address,uint256,bytes32)"(
      _tokenIn: string,
      _tokenOut: string,
      _outSwapAmount: BigNumberish,
      _marketFactoryId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMarketReserves(
      _marketFactoryId: BytesLike,
      _xyt: string,
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMarketReserves(bytes32,address,address)"(
      _marketFactoryId: BytesLike,
      _xyt: string,
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMarketTokenAddresses(
      _market: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMarketTokenAddresses(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
